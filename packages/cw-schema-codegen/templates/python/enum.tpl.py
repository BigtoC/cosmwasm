# This code is @generated by cw-schema-codegen. Do not modify this manually.
from dataclasses import dataclass, field
from dataclasses_json import dataclass_json, config
from typing import Optional, Iterable

enum_field = lambda: field(default=None, metadata=config(exclude=lambda x: x is None))

@dataclass_json
@dataclass
class {{ name }}:
    '''{% for doc in docs %}
    {{ doc }}
    {% endfor %}'''

    class VariantIndicator:
        '''
        This structure is an indicator of the simple enum variant that is currently contained
        in this enum structure. It's used only for the enum variants that does not contain
        any inner structure. It's constructed automatically and it's not intend to be manually
        used by the user.
        '''
        pass


{% for variant in variants %}
    '''{% for doc in variant.docs %}
    {{ doc }}
    {% endfor %}'''
    {% match variant.ty %}
        {% when TypeTemplate::Unit %}
            {{ variant.name }}: Optional[VariantIndicator] = enum_field()
        {% when TypeTemplate::Tuple with (types) %}
            {{ variant.name }}: Optional[tuple[{{ types|join(", ") }}]] = enum_field()
        {% when TypeTemplate::Named with { fields } %}
            class {{ variant.name }}Type:
                {% for field in fields %}
                    '''{% for doc in field.docs %}
                    # {{ doc }}
                    {% endfor %}'''
                    {{ field.name }}: {{ field.ty }}
                {% endfor %}
            {{ variant.name }}: Optional[{{ variant.name }}Type] = enum_field()
    {% endmatch %}
{% endfor %}